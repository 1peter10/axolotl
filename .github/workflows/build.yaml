name: Axolotl build pipeline

on:
  workflow_call:

env:
  NODE_VERSION: "18.x"

jobs:
  build-axolotl-web:
    name: Build axolotl-web
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download dependencies
        run: npm --prefix ./axolotl-web ci --loglevel verbose

      - name: Run tests
        run: npm --prefix ./axolotl-web test

      - name: Lint application
        run: npm --prefix ./axolotl-web run lint

      - name: Analyze npm dependencies
        run: npm --prefix ./axolotl-web run depcheck

      - name: Build
        run: npm --prefix ./axolotl-web run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: axolotl-web
          path: axolotl-web/dist/
          retention-days: 1

  build-axolotl:
    name: Build axolotl
    runs-on: ubuntu-latest
    needs:
      - build-axolotl-web
    steps:
      - name: Install tauri dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends cmake libgtk-3-dev libwebkit2gtk-4.1-dev librsvg2-dev libayatana-appindicator3-dev libssl-dev libjavascriptcoregtk-4.1-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download axolotl-web build artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: axolotl-web
          path: build-artifacts

      - name: Copy axolotl-web build artifacts
        run: |
          mkdir --parents axolotl-web/dist
          cp -rf ${{steps.download.outputs.download-path}}/* axolotl-web/dist

      - name: Build
        run: |
          cargo build --release --features tauri

      - name: Install tauri-cli
        run: cargo install tauri-cli
      
      - name: Install vite
        run: npm install -g vite
      
      - name: Download dependencies
        run: npm --prefix ./axolotl-web ci --loglevel verbose

      - name: Build deb package
        run: cargo tauri build -b deb --features tauri
        
      - name: Build appimage package
        run: cargo tauri build -b appimage --features tauri

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-axolotl-linux-amd64
          path: target/release/axolotl
          retention-days: 1
      - name: Upload deb package
        uses: actions/upload-artifact@v3
        with:
          name: build-axolotl-linux-amd64-deb
          path: target/release/bundle/deb/*.deb
          retention-days: 1
      - name: Upload appimage package
        uses: actions/upload-artifact@v3
        with:
          name: build-axolotl-linux-amd64-appimage
          path: target/release/bundle/appimage/*.AppImage
          retention-days: 1

  build-axolotl-arm64:
    name: Build axolotl arm64
    runs-on: ubuntu-latest

    needs:
      - build-axolotl-web
    steps:
      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y ca-certificates curl

      - name: Install tauri arm64 dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo sed -i '/^deb \[/! s/^deb /deb [arch=amd64] /' /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main multiverse universe" | sudo tee -a /etc/apt/sources.list

          sudo apt-get update && sudo apt-get install -y --no-install-recommends cmake libgtk-3-dev:arm64 libwebkit2gtk-4.1-dev:arm64 librsvg2-dev:arm64 libayatana-appindicator3-dev:arm64 libssl-dev:arm64 libjavascriptcoregtk-4.1-dev:arm64

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: aarch64-unknown-linux-gnu

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Setup C compiler, linker and pkgconfig
        run: |
          sudo apt-get install -y g++ g++-aarch64-linux-gnu

          echo "HOST_CC=gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download build-axolotl-web build artifacts
        uses: actions/download-artifact@v3
        id: download-axolotl-web
        with:
          name: axolotl-web
          path: build-artifacts

      - name: Copy axolotl-web build artifacts
        run: |
          mkdir --parents axolotl-web/dist
          cp -rf ${{steps.download-axolotl-web.outputs.download-path}}/* axolotl-web/dist

      - name: Build
        run: cargo build --release --target aarch64-unknown-linux-gnu --features tauri

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-axolotl-linux-arm64
          path: target/aarch64-unknown-linux-gnu/release/axolotl
          retention-days: 1
