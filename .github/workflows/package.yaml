name: Axolotl package pipeline

on:
  workflow_call:

jobs:
  package-click:
    strategy:
      matrix:
        arch: [armhf, arm64, amd64]
    name: Package as click ${{ matrix.arch }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build-artifacts

      - name: Put axolotl web in place
        run: |
          mkdir $GITHUB_WORKSPACE/axolotl-web/dist
          cp -rf build-artifacts/axolotl-web/* $GITHUB_WORKSPACE/axolotl-web/dist

      - name: Build click (${{ matrix.arch }})
        # workaround https://github.com/actions/runner/issues/1479#issuecomment-969306629
        uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
        with:
          step: |
            uses: docker://clickable/ci-20.04-${{ matrix.arch }}:7.11.0
            with:
              args: clickable build --verbose -a ${{ matrix.arch }} --app

      - name: Upload the built click artifact (${{ matrix.arch }})
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-Clickable
          path: build/*/app/textsecure.nanuc_*.click
          retention-days: 1

  package-flatpak-web:
    name: Package as Flatpak web bundle
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-22.08
      options: --privileged

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build Flatpak Web version
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v5
        with:
          bundle: axolotl-web.flatpak
          manifest-path: flatpak/web/org.nanuc.Axolotl.yml
          cache-key: flatpak-builder-web-${{ github.sha }}
          branch: ${{ github.ref_name }}

  package-flatpak-qt:
    name: Package as Flatpak QT bundle
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:kde-5.15-22.08
      options: --privileged

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build Flatpak QT version
        uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v5
        with:
          bundle: axolotl-qt.flatpak
          manifest-path: flatpak/qt/org.nanuc.Axolotl.yml
          cache-key: flatpak-builder-qt-${{ github.sha }}
          branch: ${{ github.ref_name }}

  package-deb-arm64:
    name: Package as Debian arm64
    runs-on: ubuntu-latest

    steps:
      - name: Install tools
        run: |
          sudo apt-get update && sudo apt-get install -y ca-certificates curl debmake

      - name: Install tauri arm64 dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo sed -i '/^deb \[/! s/^deb /deb [arch=amd64] /' /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-backports main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main multiverse universe" | sudo tee -a /etc/apt/sources.list

          sudo apt-get update && sudo apt-get install -y --no-install-recommends cmake libgtk-3-dev:arm64 libwebkit2gtk-4.1-dev:arm64 librsvg2-dev:arm64 libayatana-appindicator3-dev:arm64 libssl-dev:arm64 libjavascriptcoregtk-4.1-dev:arm64

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: aarch64-unknown-linux-gnu

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Setup C compiler, linker and pkgconfig
        run: |
          sudo apt-get install -y g++ g++-aarch64-linux-gnu

          echo "HOST_CC=gcc" >> $GITHUB_ENV
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_SYSROOT_DIR=/" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download build artifacts arm64
        uses: actions/download-artifact@v3
#        id: download-axolotl-arm64
        with:
          name: build-axolotl-linux-arm64
          path: target/aarch64-unknown-linux-gnu/release/axolotl

      - name: Install cargo-deb
        run: cargo install cargo-deb --no-default-features

      - name: Get git tag version
        run: |
          git fetch --all --tags
          echo "TAG=$(git tag | tail --lines=1)" >> $GITHUB_ENV

      - name: Set release version
        run: |
          echo "RELEASE_VERSION=$(echo ${{ env.TAG }} | sed 's/v//')" >> $GITHUB_ENV

      - name: Prebuild package Debian arm64
        run: |
          wget https://github.com/nanu-c/axolotl/archive/v${{ env.RELEASE_VERSION }}.tar.gz --output-document=$GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}.tar.gz
          mkdir --parents $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/axolotl
          cp --recursive $GITHUB_WORKSPACE/target/aarch64-unknown-linux-gnu/release/axolotl/* $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/axolotl/
          cp $GITHUB_WORKSPACE/deb/LICENSE $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/LICENSE
          cd $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }} && debmake --yes --email arno_nuehm@riseup.net --fullname "Arno Nuehm" --monoarch
          sed -i '3d;4d' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          awk -i inplace 'NR == 3 {print "  * See upstream changelog below."} {print}' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          echo >> $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          cat $GITHUB_WORKSPACE/docs/CHANGELOG.md >> $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog
          sed -i 's/<preferred name and address to reach the upstream project>/Aaron <aaron@nanu-c.org>/' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/copyright
          sed -i 's/<url:\/\/example.com>/https:\/\/github.com\/nanu-c\/axolotl/' $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/copyright
          cp $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/changelog $GITHUB_WORKSPACE/deb/
          cp $GITHUB_WORKSPACE/axolotl-${{ env.RELEASE_VERSION }}/debian/copyright $GITHUB_WORKSPACE/deb/

      - name: Build package Debian arm64
        run: cargo deb --target=aarch64-unknown-linux-gnu --no-build

      - name: Upload package artifact Debian arm64
        uses: actions/upload-artifact@v3
        with:
          name: Axolotl-Debian-arm64-package
          path: target/aarch64-unknown-linux-gnu/debian/axolotl_*_arm64.deb
          retention-days: 1
