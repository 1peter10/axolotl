name: Axolotl pipeline

on: [ push, pull_request ]

jobs:
  build-axolotl:
    name: Build axolotl
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Check out code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -race ./...

      - name: Build
        run: go build -v

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: axolotl-${{ matrix.os }}
          path: axolotl
          retention-days: 1

  build-axolotl-web:
    name: Build axolotl-web
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node 12
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Check out code
        uses: actions/checkout@v2

      - name: Download dependencies
        run: npm --prefix ./axolotl-web ci

      - name: Run tests
        run: npm --prefix ./axolotl-web test

      - name: Lint application
        run: npm --prefix ./axolotl-web run lint

      - name: Build
        run: npm --prefix ./axolotl-web run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: axolotl-web
          path: axolotl-web/dist/
          retention-days: 1

  package-appimage:
    name: Package as an AppImage
    needs: [build-axolotl, build-axolotl-web]
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download axolotl and axolotl-web build artifacts
        uses: actions/download-artifact@v2
        with:
          path: bin

      - name: Setup appimagetool
        run: |
          curl -sLO https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Build the AppImage
        env:
          ARCH: x86_64
        run: |
          mkdir -p build/AppDir/usr/bin
          cp -f bin/axolotl-ubuntu-latest/axolotl build/AppDir/usr/bin/axolotl
          chmod +x build/AppDir/usr/bin/axolotl

          mkdir -p build/AppDir/usr/bin/axolotl-web/dist
          cp -rf bin/axolotl-web/* build/AppDir/usr/bin/axolotl-web/dist

          cp -f appimage/AppDir/AppRun build/AppDir/AppRun
          chmod +x build/AppDir/AppRun

          cp -f appimage/AppDir/axolotl.desktop build/AppDir/axolotl.desktop
          cp -f appimage/AppDir/axolotl.png build/AppDir/axolotl.png

          mkdir -p build/AppDir/usr/share/metainfo
          cp -f appimage/AppDir/axolotl.appdata.xml build/AppDir/usr/share/metainfo/axolotl.appdata.xml

          ./appimagetool-x86_64.AppImage build/AppDir

      - name: Upload the built AppImage artifact
        uses: actions/upload-artifact@v2
        with:
          name: Axolotl-AppImage
          path: Axolotl-x86_64.AppImage
          retention-days: 1

  release:
    name: Create release
    # This ensures that this job only runs on git tags
    # if: startsWith(github.ref, "refs/tags/v")
    needs: [package-appimage]
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get git tag version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Set git tag version
        run: |
          echo ::set-env name=VERSION::${{ steps.get_version.outputs.version }}

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: build-artifacts

      - name: Create zip archive of repo
        run: |
          zip -r ./build-artifacts/sources.zip ./ --exclude ./build-artifacts

      - name: Create draft GitHub release page
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${VERSION}
          release_name: ${VERSION}
          body: |
            -
            -
          draft: true
          prerelease: false

      - name: Add axolotl sources to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-artifacts/sources.zip
          asset_name: sources-${VERSION}.zip
          asset_content_type: application/zip

      - name: Add AppImage to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-artifacts/Axolotl-AppImage/Axolotl-x86_64.AppImage
          asset_name: Axolotl-${VERSION}-x86_64.AppImage
          asset_content_type: application/vnd.appimage
